document.addEventListener('DOMContentLoaded', () => {
    const runButton = document.getElementById('runButton');
    const htmlInput = document.getElementById('htmlInput');
    const cssInput = document.getElementById('cssInput');
    const jsInput = document.getElementById('jsInput');
    const output = document.getElementById('output');
    const errorMessage = document.getElementById('error-message');
    const themeToggle = document.getElementById('themeToggle');

    if (themeToggle) {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('light-theme');
            themeToggle.textContent = document.body.classList.contains('light-theme') ? 'üåô' : '‚òÄÔ∏è';
        });
    }

    // –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (runButton && htmlInput && cssInput && jsInput && output && errorMessage) {
        console.log("–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –Ω–∞–π–¥–µ–Ω—ã, —Å–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤");

        runButton.addEventListener('click', () => {
            console.log("–ö–Ω–æ–ø–∫–∞ '–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç' –Ω–∞–∂–∞—Ç–∞");
            const html = htmlInput.value.trim();
            console.log("HTML –≤–≤–µ–¥—ë–Ω–Ω—ã–π:", `'${html}'`);

            if (!html) {
                console.log("HTML –ø—É—Å—Ç–æ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ");
                errorMessage.textContent = "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –≤ HTML";
                errorMessage.classList.add('show');
                setTimeout(() => {
                    errorMessage.classList.remove('show');
                    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥");
                }, 5000);
                return;
            }

            console.log("HTML –Ω–µ –ø—É—Å—Ç–æ–π, –æ–±–Ω–æ–≤–ª—è–µ–º iframe");
            const css = cssInput.value || '';
            const js = jsInput.value || '';
            const content = `
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <style>
                        body {
                            background: #2e2e45;
                            color: #e0e0e0;
                            font-family: 'Roboto', sans-serif;
                            margin: 0;
                            padding: 20px;
                            overflow: auto;
                            box-sizing: border-box;
                        }
                        ::-webkit-scrollbar {
                            width: 10px;
                            height: 10px;
                        }
                        ::-webkit-scrollbar-track {
                            background: #1a1a2e;
                            border-radius: 10px;
                        }
                        ::-webkit-scrollbar-thumb {
                            background: #00d4ff;
                            border-radius: 10px;
                            box-shadow: 0 0 5px rgba(0, 212, 255, 0.5);
                        }
                        ::-webkit-scrollbar-thumb:hover {
                            background: #007bff;
                        }
                        ${css}
                    </style>
                </head>
                <body>
                    ${html}
                    <script>${js}<\/script>
                </body>
                </html>
            `;

            try {
                console.log("–ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å iframe");
                const blob = new Blob([content], { type: 'text/html' });
                const url = URL.createObjectURL(blob);
                output.src = url;
                setTimeout(() => URL.revokeObjectURL(url), 1000);
                console.log("iframe —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω");
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ iframe:", error);
                output.srcdoc = '<p style="color: #ff4081;">–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12).</p>';
            }
        });
    }
});
